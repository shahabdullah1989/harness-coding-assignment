pipeline:
  identifier: Build_shahabdullah1989_harness_coding_assignment_1759522314193
  name: Build harness-coding-assignment
  orgIdentifier: default
  projectIdentifier: Coding_Assessment
  properties:
    ci:
      codebase:
        build: <+input>
        connectorRef: account.Github
        repoName: shahabdullah1989/harness-coding-assignment
  stages:
    - stage:
        identifier: build
        name: build
        spec:
          caching:
            enabled: true
          cloneCodebase: true
          execution:
            steps:
              - step:
                  identifier: echo
                  name: echo
                  spec:
                    connectorRef: shahdocker
                    image: python:3.10.10
                    shell: Sh
                    command: echo hello world
                  timeout: ""
                  type: Run
              - step:
                  type: Run
                  name: Install dependencies and Build Python Code
                  identifier: Run_2
                  spec:
                    connectorRef: shahdocker
                    image: python:3.10.10
                    shell: Sh
                    command: |-
                      python -m venv venv 
                      /bin/bash ./venv/bin/activate
                      pip install -r requirements.txt
                      pip install uvicorn
                      cd src
                      python hello.py
                      pytest
              - step:
                  type: BuildAndPushDockerRegistry
                  name: Build and Push to Docker
                  identifier: Build_and_Push_to_Docker
                  spec:
                    connectorRef: shahdocker
                    repo: sabdulla1989/shahpythonmuley
                    tags:
                      - latest
                    dockerfile: Dockerfile
          infrastructure:
            type: KubernetesDirect
            spec:
              connectorRef: k8s_local
              namespace: harness-delegate-ng
              automountServiceAccountToken: true
              nodeSelector: {}
              os: Linux
        type: CI
    - stage:
        name: deploy to kubernetes
        identifier: deploy_to_kubernetes
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: helloworld
          environment:
            environmentRef: harnessdevenv
            deployToAll: false
            infrastructureDefinitions:
              - identifier: minikube_local
          execution:
            steps:
              - stepGroup:
                  name: Canary Deployment
                  identifier: canaryDeployment
                  steps:
                    - step:
                        name: Canary Deployment
                        identifier: canaryDeployment
                        type: K8sCanaryDeploy
                        timeout: 10m
                        spec:
                          instanceSelection:
                            type: Count
                            spec:
                              count: 1
                          skipDryRun: false
                    - step:
                        name: Canary Delete
                        identifier: canaryDelete
                        type: K8sCanaryDelete
                        timeout: 10m
                        spec: {}
              - stepGroup:
                  name: Primary Deployment
                  identifier: primaryDeployment
                  steps:
                    - step:
                        name: Rolling Deployment
                        identifier: rollingDeployment
                        type: K8sRollingDeploy
                        timeout: 10m
                        spec:
                          skipDryRun: false
            rollbackSteps:
              - step:
                  name: Canary Delete
                  identifier: rollbackCanaryDelete
                  type: K8sCanaryDelete
                  timeout: 10m
                  spec: {}
              - step:
                  name: Rolling Rollback
                  identifier: rollingRollback
                  type: K8sRollingRollback
                  timeout: 10m
                  spec: {}
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
